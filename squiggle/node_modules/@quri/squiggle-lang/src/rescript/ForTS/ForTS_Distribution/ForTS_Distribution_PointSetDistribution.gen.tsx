/* TypeScript file generated from ForTS_Distribution_PointSetDistribution.res by genType. */
/* eslint-disable import/first */


// @ts-ignore: Implicit any on import
const ForTS_Distribution_PointSetDistributionBS = require('./ForTS_Distribution_PointSetDistribution.bs');

import type {continuousShape as PointSetTypes_continuousShape} from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';

import type {discreteShape as PointSetTypes_discreteShape} from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';

import type {genericDist as DistributionTypes_genericDist} from '../../../../src/rescript/Distributions/DistributionTypes.gen';

import type {mixedShape as PointSetTypes_mixedShape} from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';

import type {pointSetDist as PointSetTypes_pointSetDist} from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';

import type {pointSetDistributionTag as $$pointSetDistributionTag} from './ForTS_Distribution_PointSetDistribution_tag';

// tslint:disable-next-line:interface-over-type-literal
export type pointSetDistribution = PointSetTypes_pointSetDist;

// tslint:disable-next-line:interface-over-type-literal
export type continuousShape = PointSetTypes_continuousShape;

// tslint:disable-next-line:interface-over-type-literal
export type discreteShape = PointSetTypes_discreteShape;

// tslint:disable-next-line:interface-over-type-literal
export type mixedShape = PointSetTypes_mixedShape;

// tslint:disable-next-line:interface-over-type-literal
export type pointSetDistributionTag = $$pointSetDistributionTag;

export const getTag: (variant:pointSetDistribution) => pointSetDistributionTag = ForTS_Distribution_PointSetDistributionBS.getTag;

export const getMixed: (variant:pointSetDistribution) => (null | undefined | PointSetTypes_mixedShape) = ForTS_Distribution_PointSetDistributionBS.getMixed;

export const getDiscrete: (variant:pointSetDistribution) => (null | undefined | PointSetTypes_discreteShape) = ForTS_Distribution_PointSetDistributionBS.getDiscrete;

export const getContinues: (variant:pointSetDistribution) => (null | undefined | PointSetTypes_continuousShape) = ForTS_Distribution_PointSetDistributionBS.getContinues;

export const toDistribution: (v:pointSetDistribution) => DistributionTypes_genericDist = ForTS_Distribution_PointSetDistributionBS.toDistribution;
