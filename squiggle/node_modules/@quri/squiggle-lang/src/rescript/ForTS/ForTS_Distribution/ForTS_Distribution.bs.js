'use strict';

var ForTS_Distribution_tag = require("./ForTS_Distribution_tag");
var GenericDist$QuriSquiggleLang = require("../../Distributions/GenericDist.bs.js");
var Reducer_Context$QuriSquiggleLang = require("../../Reducer/Reducer_Context.bs.js");
var DistributionOperation$QuriSquiggleLang = require("../../Distributions/DistributionOperation.bs.js");

var dtPointSet_ = ForTS_Distribution_tag.distributionTag.PointSet;

var dtSampleSet_ = ForTS_Distribution_tag.distributionTag.SampleSet;

var dtSymbolic_ = ForTS_Distribution_tag.distributionTag.Symbolic;

function getTag(variant) {
  switch (variant.TAG | 0) {
    case /* PointSet */0 :
        return dtPointSet_;
    case /* SampleSet */1 :
        return dtSampleSet_;
    case /* Symbolic */2 :
        return dtSymbolic_;
    
  }
}

function getPointSet(variant) {
  switch (variant.TAG | 0) {
    case /* PointSet */0 :
        return variant._0;
    case /* SampleSet */1 :
    case /* Symbolic */2 :
        return ;
    
  }
}

function getSampleSet(variant) {
  switch (variant.TAG | 0) {
    case /* SampleSet */1 :
        return variant._0;
    case /* PointSet */0 :
    case /* Symbolic */2 :
        return ;
    
  }
}

function getSymbolic(variant) {
  switch (variant.TAG | 0) {
    case /* PointSet */0 :
    case /* SampleSet */1 :
        return ;
    case /* Symbolic */2 :
        return variant._0;
    
  }
}

var mean = DistributionOperation$QuriSquiggleLang.Constructors.mean;

var stdev = DistributionOperation$QuriSquiggleLang.Constructors.stdev;

var variance = DistributionOperation$QuriSquiggleLang.Constructors.variance;

var sample = DistributionOperation$QuriSquiggleLang.Constructors.sample;

var cdf = DistributionOperation$QuriSquiggleLang.Constructors.cdf;

var inv = DistributionOperation$QuriSquiggleLang.Constructors.inv;

var pdf = DistributionOperation$QuriSquiggleLang.Constructors.pdf;

var normalize = DistributionOperation$QuriSquiggleLang.Constructors.normalize;

function toPointSet(variant, env) {
  return GenericDist$QuriSquiggleLang.toPointSet(variant, env.xyPointLength, env.sampleCount, undefined, undefined);
}

var toString = GenericDist$QuriSquiggleLang.toString;

var defaultEnvironment = Reducer_Context$QuriSquiggleLang.defaultEnvironment;

exports.defaultEnvironment = defaultEnvironment;
exports.dtPointSet_ = dtPointSet_;
exports.dtSampleSet_ = dtSampleSet_;
exports.dtSymbolic_ = dtSymbolic_;
exports.getTag = getTag;
exports.getPointSet = getPointSet;
exports.getSampleSet = getSampleSet;
exports.getSymbolic = getSymbolic;
exports.mean = mean;
exports.stdev = stdev;
exports.variance = variance;
exports.sample = sample;
exports.cdf = cdf;
exports.inv = inv;
exports.pdf = pdf;
exports.normalize = normalize;
exports.toPointSet = toPointSet;
exports.toString = toString;
/* dtPointSet_ Not a pure module */
