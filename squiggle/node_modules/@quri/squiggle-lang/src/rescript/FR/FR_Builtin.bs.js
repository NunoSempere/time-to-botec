'use strict';

var Curry = require("@rescript/std/lib/js/curry.js");
var Js_exn = require("@rescript/std/lib/js/js_exn.js");
var Caml_splice_call = require("@rescript/std/lib/js/caml_splice_call.js");
var Reducer_Value$QuriSquiggleLang = require("../Reducer/Reducer_Value.bs.js");
var FunctionRegistry_Core$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Core.bs.js");
var FunctionRegistry_Helpers$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Helpers.bs.js");

var nameSpace = "";

function makeFnMany(name, definitions) {
  return FunctionRegistry_Core$QuriSquiggleLang.$$Function.make(name, nameSpace, false, definitions.map(function (param) {
                  var fn = param.fn;
                  return FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make(name, param.inputs, (function (inputs, param, param$1) {
                                return Curry._1(fn, inputs);
                              }), undefined);
                }), undefined, undefined, undefined, undefined, undefined);
}

function makeFn(name, inputs, fn) {
  return makeFnMany(name, [{
                inputs: inputs,
                fn: fn
              }]);
}

var library = [
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2f("add", (function (x, y) {
          return x + y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2f("subtract", (function (x, y) {
          return x - y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2f("multiply", (function (x, y) {
          return x * y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2f("divide", (function (x, y) {
          return x / y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2f("pow", (function (x, y) {
          return Math.pow(x, y);
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("equal", (function (x, y) {
          return x === y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.bb2b("equal", (function (x, y) {
          return x === y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("unequal", (function (x, y) {
          return x !== y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("unequal", (function (x, y) {
          return x !== y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("smaller", (function (x, y) {
          return x < y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("smallerEq", (function (x, y) {
          return x <= y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("larger", (function (x, y) {
          return x > y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.ff2b("largerEq", (function (x, y) {
          return x >= y;
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.bb2b("or", (function (x, y) {
          if (x) {
            return true;
          } else {
            return y;
          }
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.bb2b("and", (function (x, y) {
          if (x) {
            return y;
          } else {
            return false;
          }
        }), undefined, undefined, undefined, undefined),
  FunctionRegistry_Helpers$QuriSquiggleLang.Make.f2f("unaryMinus", (function (x) {
          return -x;
        }), undefined, undefined, undefined, undefined),
  makeFn("not", [/* FRTypeNumber */0], (function (inputs) {
          if (inputs.length !== 1) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var x = inputs[0];
          if (typeof x === "number" || x.TAG !== /* IEvNumber */6) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          } else {
            return {
                    TAG: 0,
                    _0: {
                      TAG: 1,
                      _0: x._0 !== 0,
                      [Symbol.for("name")]: "IEvBool"
                    },
                    [Symbol.for("name")]: "Ok"
                  };
          }
        })),
  makeFn("not", [/* FRTypeBool */1], (function (inputs) {
          if (inputs.length !== 1) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var x = inputs[0];
          if (typeof x === "number" || x.TAG !== /* IEvBool */1) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          } else {
            return {
                    TAG: 0,
                    _0: {
                      TAG: 1,
                      _0: !x._0,
                      [Symbol.for("name")]: "IEvBool"
                    },
                    [Symbol.for("name")]: "Ok"
                  };
          }
        })),
  makeFn("concat", [
        /* FRTypeString */8,
        /* FRTypeString */8
      ], (function (inputs) {
          if (inputs.length !== 2) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var a = inputs[0];
          if (typeof a === "number") {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          if (a.TAG !== /* IEvString */8) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var b = inputs[1];
          if (typeof b === "number") {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          if (b.TAG !== /* IEvString */8) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var answer = a._0.concat(b._0);
          return {
                  TAG: 0,
                  _0: {
                    TAG: 8,
                    _0: answer,
                    [Symbol.for("name")]: "IEvString"
                  },
                  [Symbol.for("name")]: "Ok"
                };
        })),
  makeFn("concat", [
        {
          TAG: 2,
          _0: /* FRTypeAny */9,
          [Symbol.for("name")]: "FRTypeArray"
        },
        {
          TAG: 2,
          _0: /* FRTypeAny */9,
          [Symbol.for("name")]: "FRTypeArray"
        }
      ], (function (inputs) {
          if (inputs.length !== 2) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var originalA = inputs[0];
          if (typeof originalA === "number") {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          if (originalA.TAG !== /* IEvArray */0) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var b = inputs[1];
          if (typeof b === "number") {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          if (b.TAG !== /* IEvArray */0) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var a = originalA._0.slice();
          Caml_splice_call.spliceObjApply(a, "push", [b._0]);
          return {
                  TAG: 0,
                  _0: {
                    TAG: 0,
                    _0: a,
                    [Symbol.for("name")]: "IEvArray"
                  },
                  [Symbol.for("name")]: "Ok"
                };
        })),
  makeFn("inspect", [/* FRTypeAny */9], (function (inputs) {
          if (inputs.length !== 1) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var value = inputs[0];
          console.log(Reducer_Value$QuriSquiggleLang.toString(value));
          return {
                  TAG: 0,
                  _0: value,
                  [Symbol.for("name")]: "Ok"
                };
        })),
  makeFn("inspect", [
        /* FRTypeAny */9,
        /* FRTypeString */8
      ], (function (inputs) {
          if (inputs.length !== 2) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var value = inputs[0];
          var label = inputs[1];
          if (typeof label === "number") {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          if (label.TAG !== /* IEvString */8) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          console.log("" + label._0 + ": " + Reducer_Value$QuriSquiggleLang.toString(value) + "");
          return {
                  TAG: 0,
                  _0: value,
                  [Symbol.for("name")]: "Ok"
                };
        })),
  makeFn("javascriptraise", [/* FRTypeAny */9], (function (inputs) {
          if (inputs.length !== 1) {
            return {
                    TAG: 1,
                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                    [Symbol.for("name")]: "Error"
                  };
          }
          var msg = inputs[0];
          return Js_exn.raiseError(Reducer_Value$QuriSquiggleLang.toString(msg));
        }))
];

exports.nameSpace = nameSpace;
exports.makeFnMany = makeFnMany;
exports.makeFn = makeFn;
exports.library = library;
/* library Not a pure module */
