'use strict';

var Curry = require("@rescript/std/lib/js/curry.js");
var E_A$QuriSquiggleLang = require("../Utility/E/E_A.bs.js");
var E_R$QuriSquiggleLang = require("../Utility/E/E_R.bs.js");
var GenericDist$QuriSquiggleLang = require("../Distributions/GenericDist.bs.js");
var SampleSetDist$QuriSquiggleLang = require("../Distributions/SampleSetDist/SampleSetDist.bs.js");
var Reducer_Lambda$QuriSquiggleLang = require("../Reducer/Reducer_Lambda.bs.js");
var DistributionTypes$QuriSquiggleLang = require("../Distributions/DistributionTypes.bs.js");
var FunctionRegistry_Core$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Core.bs.js");
var FunctionRegistry_Helpers$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Helpers.bs.js");

var nameSpace = "SampleSet";

function doLambdaCall(aLambdaValue, list, context, reducer) {
  var f = Reducer_Lambda$QuriSquiggleLang.doLambdaCall(aLambdaValue, list, context, reducer);
  if (typeof f === "number" || f.TAG !== /* IEvNumber */6) {
    return {
            TAG: 1,
            _0: /* SampleMapNeedsNtoNFunction */4,
            [Symbol.for("name")]: "Error"
          };
  } else {
    return {
            TAG: 0,
            _0: f._0,
            [Symbol.for("name")]: "Ok"
          };
  }
}

function toType(r) {
  if (r.TAG === /* Ok */0) {
    return {
            TAG: 0,
            _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evDistribution({
                  TAG: 1,
                  _0: r._0,
                  [Symbol.for("name")]: "SampleSet"
                }),
            [Symbol.for("name")]: "Ok"
          };
  } else {
    return {
            TAG: 1,
            _0: {
              TAG: 2,
              _0: {
                TAG: 0,
                _0: r._0,
                [Symbol.for("name")]: "SampleSetError"
              },
              [Symbol.for("name")]: "REDistributionError"
            },
            [Symbol.for("name")]: "Error"
          };
  }
}

function fromFn(aLambdaValue, context, reducer) {
  var sampleCount = context.environment.sampleCount;
  return E_A$QuriSquiggleLang.R.firstErrorOrOpen(E_A$QuriSquiggleLang.makeBy(sampleCount, (function (r) {
                    return doLambdaCall(aLambdaValue, [{
                                  TAG: 6,
                                  _0: r,
                                  [Symbol.for("name")]: "IEvNumber"
                                }], context, reducer);
                  })));
}

function map1(sampleSetDist, aLambdaValue, context, reducer) {
  var fn = function (r) {
    return doLambdaCall(aLambdaValue, [{
                  TAG: 6,
                  _0: r,
                  [Symbol.for("name")]: "IEvNumber"
                }], context, reducer);
  };
  return toType(SampleSetDist$QuriSquiggleLang.samplesMap(fn, sampleSetDist));
}

function map2(t1, t2, aLambdaValue, context, reducer) {
  var fn = function (a, b) {
    return doLambdaCall(aLambdaValue, [
                {
                  TAG: 6,
                  _0: a,
                  [Symbol.for("name")]: "IEvNumber"
                },
                {
                  TAG: 6,
                  _0: b,
                  [Symbol.for("name")]: "IEvNumber"
                }
              ], context, reducer);
  };
  return toType(SampleSetDist$QuriSquiggleLang.map2(fn, t1, t2));
}

function map3(t1, t2, t3, aLambdaValue, context, reducer) {
  var fn = function (a, b, c) {
    return doLambdaCall(aLambdaValue, [
                {
                  TAG: 6,
                  _0: a,
                  [Symbol.for("name")]: "IEvNumber"
                },
                {
                  TAG: 6,
                  _0: b,
                  [Symbol.for("name")]: "IEvNumber"
                },
                {
                  TAG: 6,
                  _0: c,
                  [Symbol.for("name")]: "IEvNumber"
                }
              ], context, reducer);
  };
  return toType(SampleSetDist$QuriSquiggleLang.map3(fn, t1, t2, t3));
}

function parseSampleSetArray(arr) {
  var parseSampleSet = function (value) {
    if (typeof value === "number") {
      return ;
    }
    if (value.TAG !== /* IEvDistribution */4) {
      return ;
    }
    var dist = value._0;
    switch (dist.TAG | 0) {
      case /* SampleSet */1 :
          return dist._0;
      case /* PointSet */0 :
      case /* Symbolic */2 :
          return ;
      
    }
  };
  return E_A$QuriSquiggleLang.O.openIfAllSome(E_A$QuriSquiggleLang.fmap(arr, parseSampleSet));
}

function mapN(aValueArray, aLambdaValue, context, reducer) {
  var t1 = parseSampleSetArray(aValueArray);
  if (t1 === undefined) {
    return {
            TAG: 1,
            _0: {
              TAG: 5,
              _0: "",
              [Symbol.for("name")]: "REFunctionNotFound"
            },
            [Symbol.for("name")]: "Error"
          };
  }
  var fn = function (a) {
    return doLambdaCall(aLambdaValue, [{
                  TAG: 0,
                  _0: E_A$QuriSquiggleLang.fmap(a, (function (x) {
                          return FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(x);
                        })),
                  [Symbol.for("name")]: "IEvArray"
                }], context, reducer);
  };
  return toType(SampleSetDist$QuriSquiggleLang.mapN(fn, t1));
}

var Internal = {
  doLambdaCall: doLambdaCall,
  toType: toType,
  fromFn: fromFn,
  map1: map1,
  map2: map2,
  map3: map3,
  parseSampleSetArray: parseSampleSetArray,
  mapN: mapN
};

var libaryBase = [
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("fromDist", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("fromDist", [/* FRTypeDist */6], (function (inputs, context, param) {
                if (inputs.length !== 1) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dist = inputs[0];
                if (typeof dist === "number" || dist.TAG !== /* IEvDistribution */4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                } else {
                  return E_R$QuriSquiggleLang.errMap(E_R$QuriSquiggleLang.fmap(E_R$QuriSquiggleLang.fmap(GenericDist$QuriSquiggleLang.toSampleSetDist(dist._0, context.environment.sampleCount), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.sampleSet), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evDistribution), (function (e) {
                                return {
                                        TAG: 2,
                                        _0: e,
                                        [Symbol.for("name")]: "REDistributionError"
                                      };
                              }));
                }
              }), undefined)], ["SampleSet.fromDist(normal(5,2))"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("fromList", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("fromList", [{
                TAG: 2,
                _0: /* FRTypeNumber */0,
                [Symbol.for("name")]: "FRTypeArray"
              }], (function (inputs, param, param$1) {
                var sampleSet = E_R$QuriSquiggleLang.bind(Curry._1(FunctionRegistry_Helpers$QuriSquiggleLang.Prepare.ToTypedArray.numbers, inputs), (function (r) {
                        return E_R$QuriSquiggleLang.errMap(SampleSetDist$QuriSquiggleLang.make(r), SampleSetDist$QuriSquiggleLang.$$Error.toString);
                      }));
                return E_R$QuriSquiggleLang.errMap(E_R$QuriSquiggleLang.fmap(E_R$QuriSquiggleLang.fmap(sampleSet, FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.sampleSet), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evDistribution), FunctionRegistry_Helpers$QuriSquiggleLang.wrapError);
              }), undefined)], ["SampleSet.fromList([3,5,2,3,5,2,3,5,2,3,3,5,3,2,3,1,1,3])"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("toList", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("toList", [/* FRTypeDist */6], (function (inputs, param, param$1) {
                if (inputs.length !== 1) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var match = inputs[0];
                if (typeof match === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (match.TAG !== /* IEvDistribution */4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dist = match._0;
                switch (dist.TAG | 0) {
                  case /* SampleSet */1 :
                      return {
                              TAG: 0,
                              _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evArray(E_A$QuriSquiggleLang.fmap(dist._0, FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber)),
                              [Symbol.for("name")]: "Ok"
                            };
                  case /* PointSet */0 :
                  case /* Symbolic */2 :
                      return {
                              TAG: 1,
                              _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                              [Symbol.for("name")]: "Error"
                            };
                  
                }
              }), undefined)], ["SampleSet.toList(SampleSet.fromDist(normal(5,2)))"], /* EvtArray */0, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("fromFn", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("fromFn", [/* FRTypeLambda */7], (function (inputs, context, reducer) {
                if (inputs.length !== 1) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var lambda = inputs[0];
                if (typeof lambda === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (lambda.TAG !== /* IEvLambda */5) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var r = fromFn(lambda._0, context, reducer);
                if (r.TAG === /* Ok */0) {
                  return {
                          TAG: 0,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evDistribution(FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.sampleSet(r._0)),
                          [Symbol.for("name")]: "Ok"
                        };
                } else {
                  return {
                          TAG: 1,
                          _0: {
                            TAG: 9,
                            _0: r._0,
                            [Symbol.for("name")]: "REOperationError"
                          },
                          [Symbol.for("name")]: "Error"
                        };
                }
              }), undefined)], ["SampleSet.fromFn({|| sample(normal(5,2))})"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("map", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("map", [
              /* FRTypeDist */6,
              /* FRTypeLambda */7
            ], (function (inputs, context, reducer) {
                if (inputs.length !== 2) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var match = inputs[0];
                if (typeof match === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (match.TAG !== /* IEvDistribution */4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dist = match._0;
                switch (dist.TAG | 0) {
                  case /* SampleSet */1 :
                      var lambda = inputs[1];
                      if (typeof lambda === "number" || lambda.TAG !== /* IEvLambda */5) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      } else {
                        return map1(dist._0, lambda._0, context, reducer);
                      }
                  case /* PointSet */0 :
                  case /* Symbolic */2 :
                      return {
                              TAG: 1,
                              _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                              [Symbol.for("name")]: "Error"
                            };
                  
                }
              }), undefined)], ["SampleSet.map(SampleSet.fromDist(normal(5,2)), {|x| x + 1})"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("map2", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("map2", [
              /* FRTypeDist */6,
              /* FRTypeDist */6,
              /* FRTypeLambda */7
            ], (function (inputs, context, reducer) {
                if (inputs.length !== 3) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var match = inputs[0];
                if (typeof match === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (match.TAG !== /* IEvDistribution */4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dist1 = match._0;
                switch (dist1.TAG | 0) {
                  case /* SampleSet */1 :
                      var match$1 = inputs[1];
                      if (typeof match$1 === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (match$1.TAG !== /* IEvDistribution */4) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var dist2 = match$1._0;
                      switch (dist2.TAG | 0) {
                        case /* SampleSet */1 :
                            var lambda = inputs[2];
                            if (typeof lambda === "number" || lambda.TAG !== /* IEvLambda */5) {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            } else {
                              return map2(dist1._0, dist2._0, lambda._0, context, reducer);
                            }
                        case /* PointSet */0 :
                        case /* Symbolic */2 :
                            return {
                                    TAG: 1,
                                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                    [Symbol.for("name")]: "Error"
                                  };
                        
                      }
                  case /* PointSet */0 :
                  case /* Symbolic */2 :
                      return {
                              TAG: 1,
                              _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                              [Symbol.for("name")]: "Error"
                            };
                  
                }
              }), undefined)], ["SampleSet.map2(SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(5,2)), {|x, y| x + y})"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("map3", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("map3", [
              /* FRTypeDist */6,
              /* FRTypeDist */6,
              /* FRTypeDist */6,
              /* FRTypeLambda */7
            ], (function (inputs, context, reducer) {
                if (inputs.length !== 4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var match = inputs[0];
                if (typeof match === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (match.TAG !== /* IEvDistribution */4) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dist1 = match._0;
                switch (dist1.TAG | 0) {
                  case /* SampleSet */1 :
                      var match$1 = inputs[1];
                      if (typeof match$1 === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (match$1.TAG !== /* IEvDistribution */4) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var dist2 = match$1._0;
                      switch (dist2.TAG | 0) {
                        case /* SampleSet */1 :
                            var match$2 = inputs[2];
                            if (typeof match$2 === "number") {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            }
                            if (match$2.TAG !== /* IEvDistribution */4) {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            }
                            var dist3 = match$2._0;
                            switch (dist3.TAG | 0) {
                              case /* SampleSet */1 :
                                  var lambda = inputs[3];
                                  if (typeof lambda === "number" || lambda.TAG !== /* IEvLambda */5) {
                                    return {
                                            TAG: 1,
                                            _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                            [Symbol.for("name")]: "Error"
                                          };
                                  } else {
                                    return map3(dist1._0, dist2._0, dist3._0, lambda._0, context, reducer);
                                  }
                              case /* PointSet */0 :
                              case /* Symbolic */2 :
                                  return {
                                          TAG: 1,
                                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                          [Symbol.for("name")]: "Error"
                                        };
                              
                            }
                        case /* PointSet */0 :
                        case /* Symbolic */2 :
                            return {
                                    TAG: 1,
                                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                    [Symbol.for("name")]: "Error"
                                  };
                        
                      }
                  case /* PointSet */0 :
                  case /* Symbolic */2 :
                      return {
                              TAG: 1,
                              _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                              [Symbol.for("name")]: "Error"
                            };
                  
                }
              }), undefined)], ["SampleSet.map3(SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(5,2)), {|x, y, z| max([x,y,z])})"], /* EvtDistribution */4, undefined, undefined, undefined),
  FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("mapN", nameSpace, true, [FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make("mapN", [
              {
                TAG: 2,
                _0: /* FRTypeDist */6,
                [Symbol.for("name")]: "FRTypeArray"
              },
              /* FRTypeLambda */7
            ], (function (inputs, context, reducer) {
                if (inputs.length !== 2) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var dists = inputs[0];
                if (typeof dists === "number") {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                if (dists.TAG !== /* IEvArray */0) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                }
                var lambda = inputs[1];
                if (typeof lambda === "number" || lambda.TAG !== /* IEvLambda */5) {
                  return {
                          TAG: 1,
                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                          [Symbol.for("name")]: "Error"
                        };
                } else {
                  return mapN(dists._0, lambda._0, context, reducer);
                }
              }), undefined)], ["SampleSet.mapN([SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(5,2))], {|x| max(x)})"], /* EvtDistribution */4, undefined, undefined, undefined)
];

function template(name, inputs, run) {
  return FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make(name, inputs, (function (inputs, param, param$1) {
                return Curry._1(run, inputs);
              }), undefined);
}

function wrapper(r) {
  return E_R$QuriSquiggleLang.errMap(E_R$QuriSquiggleLang.fmap(r, (function (r) {
                    return FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evDistribution(FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.sampleSet(r));
                  })), (function (e) {
                return {
                        TAG: 2,
                        _0: DistributionTypes$QuriSquiggleLang.$$Error.sampleErrorToDistErr(e),
                        [Symbol.for("name")]: "REDistributionError"
                      };
              }));
}

function mkBig(name, withDist, withFloat) {
  return FunctionRegistry_Core$QuriSquiggleLang.$$Function.make(name, nameSpace, false, [
              template(name, [
                    /* FRTypeDist */6,
                    /* FRTypeDist */6
                  ], (function (inputs) {
                      if (inputs.length !== 2) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var match = inputs[0];
                      if (typeof match === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (match.TAG !== /* IEvDistribution */4) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var dist1 = match._0;
                      switch (dist1.TAG | 0) {
                        case /* SampleSet */1 :
                            var match$1 = inputs[1];
                            if (typeof match$1 === "number") {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            }
                            if (match$1.TAG !== /* IEvDistribution */4) {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            }
                            var dist2 = match$1._0;
                            switch (dist2.TAG | 0) {
                              case /* SampleSet */1 :
                                  return wrapper(Curry._2(withDist, dist1._0, dist2._0));
                              case /* PointSet */0 :
                              case /* Symbolic */2 :
                                  return {
                                          TAG: 1,
                                          _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                          [Symbol.for("name")]: "Error"
                                        };
                              
                            }
                        case /* PointSet */0 :
                        case /* Symbolic */2 :
                            return {
                                    TAG: 1,
                                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                    [Symbol.for("name")]: "Error"
                                  };
                        
                      }
                    })),
              template(name, [
                    /* FRTypeDist */6,
                    /* FRTypeNumber */0
                  ], (function (inputs) {
                      if (inputs.length !== 2) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var match = inputs[0];
                      if (typeof match === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (match.TAG !== /* IEvDistribution */4) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var dist = match._0;
                      switch (dist.TAG | 0) {
                        case /* SampleSet */1 :
                            var f = inputs[1];
                            if (typeof f === "number" || f.TAG !== /* IEvNumber */6) {
                              return {
                                      TAG: 1,
                                      _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                      [Symbol.for("name")]: "Error"
                                    };
                            } else {
                              return wrapper(Curry._2(withFloat, dist._0, f._0));
                            }
                        case /* PointSet */0 :
                        case /* Symbolic */2 :
                            return {
                                    TAG: 1,
                                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                    [Symbol.for("name")]: "Error"
                                  };
                        
                      }
                    })),
              template(name, [
                    /* FRTypeNumber */0,
                    /* FRTypeDist */6
                  ], (function (inputs) {
                      if (inputs.length !== 2) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var f = inputs[0];
                      if (typeof f === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (f.TAG !== /* IEvNumber */6) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var match = inputs[1];
                      if (typeof match === "number") {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      if (match.TAG !== /* IEvDistribution */4) {
                        return {
                                TAG: 1,
                                _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                [Symbol.for("name")]: "Error"
                              };
                      }
                      var dist = match._0;
                      switch (dist.TAG | 0) {
                        case /* SampleSet */1 :
                            return wrapper(Curry._2(withFloat, dist._0, f._0));
                        case /* PointSet */0 :
                        case /* Symbolic */2 :
                            return {
                                    TAG: 1,
                                    _0: FunctionRegistry_Helpers$QuriSquiggleLang.impossibleError,
                                    [Symbol.for("name")]: "Error"
                                  };
                        
                      }
                    }))
            ], [
              "SampleSet." + name + "(SampleSet.fromDist(normal(5,2)), SampleSet.fromDist(normal(6,2)))",
              "SampleSet." + name + "(SampleSet.fromDist(normal(5,2)), 3.0)",
              "SampleSet." + name + "(4.0, SampleSet.fromDist(normal(6,2)))"
            ], /* EvtDistribution */4, undefined, undefined, undefined);
}

var library = [
  mkBig("min", SampleSetDist$QuriSquiggleLang.minOfTwo, SampleSetDist$QuriSquiggleLang.minOfFloat),
  mkBig("max", SampleSetDist$QuriSquiggleLang.maxOfTwo, SampleSetDist$QuriSquiggleLang.maxOfFloat)
];

var Comparison = {
  template: template,
  wrapper: wrapper,
  mkBig: mkBig,
  library: library
};

var library$1 = E_A$QuriSquiggleLang.concat(libaryBase, library);

var requiresNamespace = true;

exports.nameSpace = nameSpace;
exports.requiresNamespace = requiresNamespace;
exports.Internal = Internal;
exports.libaryBase = libaryBase;
exports.Comparison = Comparison;
exports.library = library$1;
/* libaryBase Not a pure module */
