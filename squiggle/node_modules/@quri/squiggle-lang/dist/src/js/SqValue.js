"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqVoidValue = exports.SqTimeDurationValue = exports.SqStringValue = exports.SqRecordValue = exports.SqNumberValue = exports.SqLambdaValue = exports.SqDistributionValue = exports.SqDeclarationValue = exports.SqDateValue = exports.SqBoolValue = exports.SqArrayValue = exports.SqAbstractValue = exports.wrapValue = exports.SqValueTag = void 0;
const RSValue = __importStar(require("../rescript/ForTS/ForTS_SquiggleValue/ForTS_SquiggleValue.gen"));
const ForTS_SquiggleValue_tag_1 = require("../rescript/ForTS/ForTS_SquiggleValue/ForTS_SquiggleValue_tag");
Object.defineProperty(exports, "SqValueTag", { enumerable: true, get: function () { return ForTS_SquiggleValue_tag_1.squiggleValueTag; } });
const SqDistribution_1 = require("./SqDistribution");
const SqLambda_1 = require("./SqLambda");
const SqLambdaDeclaration_1 = require("./SqLambdaDeclaration");
const SqRecord_1 = require("./SqRecord");
const SqArray_1 = require("./SqArray");
const wrapValue = (value, location) => {
    const tag = RSValue.getTag(value);
    return new tagToClass[tag](value, location);
};
exports.wrapValue = wrapValue;
class SqAbstractValue {
    constructor(_value, location) {
        this._value = _value;
        this.location = location;
        this.valueMethod = (rsMethod) => {
            const value = rsMethod(this._value);
            return value;
        };
    }
    toString() {
        return RSValue.toString(this._value);
    }
}
exports.SqAbstractValue = SqAbstractValue;
class SqArrayValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Array;
    }
    get value() {
        return new SqArray_1.SqArray(this.valueMethod(RSValue.getArray), this.location);
    }
}
exports.SqArrayValue = SqArrayValue;
class SqBoolValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Bool;
    }
    get value() {
        return this.valueMethod(RSValue.getBool);
    }
}
exports.SqBoolValue = SqBoolValue;
class SqDateValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Date;
    }
    get value() {
        return this.valueMethod(RSValue.getDate);
    }
}
exports.SqDateValue = SqDateValue;
class SqDeclarationValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Declaration;
    }
    get value() {
        return new SqLambdaDeclaration_1.SqLambdaDeclaration(this.valueMethod(RSValue.getDeclaration));
    }
}
exports.SqDeclarationValue = SqDeclarationValue;
class SqDistributionValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Distribution;
    }
    get value() {
        return (0, SqDistribution_1.wrapDistribution)(this.valueMethod(RSValue.getDistribution));
    }
}
exports.SqDistributionValue = SqDistributionValue;
class SqLambdaValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Lambda;
    }
    get value() {
        return new SqLambda_1.SqLambda(this.valueMethod(RSValue.getLambda), this.location);
    }
}
exports.SqLambdaValue = SqLambdaValue;
class SqNumberValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Number;
    }
    get value() {
        return this.valueMethod(RSValue.getNumber);
    }
}
exports.SqNumberValue = SqNumberValue;
class SqRecordValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Record;
    }
    get value() {
        return new SqRecord_1.SqRecord(this.valueMethod(RSValue.getRecord), this.location);
    }
}
exports.SqRecordValue = SqRecordValue;
class SqStringValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.String;
    }
    get value() {
        return this.valueMethod(RSValue.getString);
    }
}
exports.SqStringValue = SqStringValue;
class SqTimeDurationValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.TimeDuration;
    }
    get value() {
        return this.valueMethod(RSValue.getTimeDuration);
    }
}
exports.SqTimeDurationValue = SqTimeDurationValue;
class SqVoidValue extends SqAbstractValue {
    constructor() {
        super(...arguments);
        this.tag = ForTS_SquiggleValue_tag_1.squiggleValueTag.Void;
    }
    get value() {
        return null;
    }
}
exports.SqVoidValue = SqVoidValue;
const tagToClass = {
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Array]: SqArrayValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Bool]: SqBoolValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Date]: SqDateValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Declaration]: SqDeclarationValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Distribution]: SqDistributionValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Lambda]: SqLambdaValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Number]: SqNumberValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Record]: SqRecordValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.String]: SqStringValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.TimeDuration]: SqTimeDurationValue,
    [ForTS_SquiggleValue_tag_1.squiggleValueTag.Void]: SqVoidValue,
};
//# sourceMappingURL=SqValue.js.map