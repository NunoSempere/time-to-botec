import * as RSValue from "../rescript/ForTS/ForTS_SquiggleValue/ForTS_SquiggleValue.gen";
import { squiggleValueTag as Tag } from "../rescript/ForTS/ForTS_SquiggleValue/ForTS_SquiggleValue_tag";
import { SqLambda } from "./SqLambda";
import { SqLambdaDeclaration } from "./SqLambdaDeclaration";
import { SqRecord } from "./SqRecord";
import { SqArray } from "./SqArray";
import { SqValueLocation } from "./SqValueLocation";
export { Tag as SqValueTag };
declare type T = RSValue.squiggleValue;
export declare const wrapValue: (value: T, location: SqValueLocation) => SqValue;
export declare abstract class SqAbstractValue {
    private _value;
    location: SqValueLocation;
    abstract tag: Tag;
    constructor(_value: T, location: SqValueLocation);
    protected valueMethod: <IR>(rsMethod: (v: T) => IR) => IR;
    toString(): string;
}
export declare class SqArrayValue extends SqAbstractValue {
    tag: Tag.Array;
    get value(): SqArray;
}
export declare class SqBoolValue extends SqAbstractValue {
    tag: Tag.Bool;
    get value(): boolean;
}
export declare class SqDateValue extends SqAbstractValue {
    tag: Tag.Date;
    get value(): Date;
}
export declare class SqDeclarationValue extends SqAbstractValue {
    tag: Tag.Declaration;
    get value(): SqLambdaDeclaration;
}
export declare class SqDistributionValue extends SqAbstractValue {
    tag: Tag.Distribution;
    get value(): import("./SqDistribution").SqDistribution;
}
export declare class SqLambdaValue extends SqAbstractValue {
    tag: Tag.Lambda;
    get value(): SqLambda;
}
export declare class SqNumberValue extends SqAbstractValue {
    tag: Tag.Number;
    get value(): number;
}
export declare class SqRecordValue extends SqAbstractValue {
    tag: Tag.Record;
    get value(): SqRecord;
}
export declare class SqStringValue extends SqAbstractValue {
    tag: Tag.String;
    get value(): string;
}
export declare class SqTimeDurationValue extends SqAbstractValue {
    tag: Tag.TimeDuration;
    get value(): number;
}
export declare class SqVoidValue extends SqAbstractValue {
    tag: Tag.Void;
    get value(): null;
}
export declare type SqValue = SqArrayValue | SqBoolValue | SqDateValue | SqDeclarationValue | SqDistributionValue | SqLambdaValue | SqNumberValue | SqRecordValue | SqStringValue | SqTimeDurationValue | SqVoidValue;
