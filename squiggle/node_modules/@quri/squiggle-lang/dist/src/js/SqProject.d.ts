import * as RSProject from "../rescript/ForTS/ForTS_ReducerProject.gen";
import { environment } from "../rescript/ForTS/ForTS_Distribution/ForTS_Distribution_Environment.gen";
import { SqError } from "./SqError";
import { SqRecord } from "./SqRecord";
export declare class SqProject {
    private _value;
    constructor(_value: RSProject.reducerProject);
    static create(): SqProject;
    getSourceIds(): string[];
    setSource(sourceId: string, value: string): void;
    removeSource(sourceId: string): void;
    getSource(sourceId: string): string | null | undefined;
    touchSource(sourceId: string): void;
    clean(sourceId: string): void;
    cleanAll(): void;
    cleanResults(sourceId: string): void;
    cleanAllResults(): void;
    getIncludes(sourceId: string): import("./types").result<string[], SqError>;
    getContinues(sourceId: string): string[];
    setContinues(sourceId: string, continues: string[]): void;
    getRunOrder(): string[];
    getRunOrderFor(sourceId: string): string[];
    parseIncludes(sourceId: string): void;
    run(sourceId: string): void;
    runAll(): void;
    getBindings(sourceId: string): SqRecord;
    getResult(sourceId: string): import("./types").result<import("./SqValue").SqValue, SqError>;
    setEnvironment(environment: environment): void;
    getEnvironment(): environment;
}
