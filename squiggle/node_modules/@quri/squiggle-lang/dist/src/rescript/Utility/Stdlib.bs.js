'use strict';
var Sample = require("@stdlib/random/sample");
var Cdf = require("@stdlib/stats/base/dists/logistic/cdf");
var Pdf = require("@stdlib/stats/base/dists/logistic/pdf");
var Cdf$1 = require("@stdlib/stats/base/dists/bernoulli/cdf");
var Pmf = require("@stdlib/stats/base/dists/bernoulli/pmf");
var Mean = require("@stdlib/stats/base/dists/logistic/mean");
var Mean$1 = require("@stdlib/stats/base/dists/bernoulli/mean");
var Stdev = require("@stdlib/stats/base/dists/logistic/stdev");
var Stdev$1 = require("@stdlib/stats/base/dists/bernoulli/stdev");
var Quantile = require("@stdlib/stats/base/dists/logistic/quantile");
var Variance = require("@stdlib/stats/base/dists/logistic/variance");
var Quantile$1 = require("@stdlib/stats/base/dists/bernoulli/quantile");
var Variance$1 = require("@stdlib/stats/base/dists/bernoulli/variance");
function cdf(prim0, prim1) {
    return Cdf$1(prim0, prim1);
}
function pmf(prim0, prim1) {
    return Pmf(prim0, prim1);
}
function quantile(prim0, prim1) {
    return Quantile$1(prim0, prim1);
}
function mean(prim) {
    return Mean$1(prim);
}
function stdev(prim) {
    return Stdev$1(prim);
}
function variance(prim) {
    return Variance$1(prim);
}
var Bernoulli = {
    cdf: cdf,
    pmf: pmf,
    quantile: quantile,
    mean: mean,
    stdev: stdev,
    variance: variance
};
function cdf$1(prim0, prim1, prim2) {
    return Cdf(prim0, prim1, prim2);
}
function pdf(prim0, prim1, prim2) {
    return Pdf(prim0, prim1, prim2);
}
function quantile$1(prim0, prim1, prim2) {
    return Quantile(prim0, prim1, prim2);
}
function mean$1(prim0, prim1) {
    return Mean(prim0, prim1);
}
function stdev$1(prim0, prim1) {
    return Stdev(prim0, prim1);
}
function variance$1(prim0, prim1) {
    return Variance(prim0, prim1);
}
var Logistic = {
    cdf: cdf$1,
    pdf: pdf,
    quantile: quantile$1,
    mean: mean$1,
    stdev: stdev$1,
    variance: variance$1
};
function sample(prim0, prim1) {
    return Sample(prim0, prim1);
}
var Random = {
    sample: sample
};
var $$Math = {};
exports.Bernoulli = Bernoulli;
exports.Logistic = Logistic;
exports.Random = Random;
exports.$$Math = $$Math;
//# sourceMappingURL=Stdlib.bs.js.map