'use strict';
var Curry = require("@rescript/std/lib/js/curry.js");
var E_A$QuriSquiggleLang = require("./E/E_A.bs.js");
var E_Float$QuriSquiggleLang = require("./E/E_Float.bs.js");
var DateTime$QuriSquiggleLang = require("./DateTime.bs.js");
function make(min, max) {
    return {
        TAG: 0,
        min: min,
        max: max,
        [Symbol.for("name")]: "Float"
    };
}
var ContinuousFloatArg = {
    make: make
};
function make$1(min, max) {
    return {
        TAG: 1,
        min: min,
        max: max,
        [Symbol.for("name")]: "Date"
    };
}
var ContinuousTimeArg = {
    make: make$1
};
function toString(arg) {
    if (arg.TAG === 0) {
        return "Float({min: " + E_Float$QuriSquiggleLang.with2DigitsPrecision(arg.min) + ", max: " + E_Float$QuriSquiggleLang.with2DigitsPrecision(arg.max) + "})";
    }
    else {
        return "Date({min: " + DateTime$QuriSquiggleLang.$$Date.toString(arg.min) + ", max: " + DateTime$QuriSquiggleLang.$$Date.toString(arg.max) + "})";
    }
}
var Arg = {
    toString: toString
};
function make$2(fn, args) {
    return {
        fn: fn,
        args: args
    };
}
function toString$1(r, fnToString) {
    var args = E_A$QuriSquiggleLang.joinWith(E_A$QuriSquiggleLang.fmap(r.args, toString), ", ");
    return "fn: " + Curry._1(fnToString, r.fn) + ", args: [" + args + "]";
}
exports.ContinuousFloatArg = ContinuousFloatArg;
exports.ContinuousTimeArg = ContinuousTimeArg;
exports.Arg = Arg;
exports.make = make$2;
exports.toString = toString$1;
//# sourceMappingURL=Declaration.bs.js.map