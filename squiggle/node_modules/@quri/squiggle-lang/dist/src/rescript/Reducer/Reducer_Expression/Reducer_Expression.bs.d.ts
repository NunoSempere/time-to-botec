export var Bindings: any;
export var Result: any;
export var T: any;
export function toLocation(expression: any): any;
export function throwFrom(error: any, expression: any, context: any): void;
export function evaluate(_expression: any, context: any): any;
export namespace BackCompatible {
    export { parse };
    export { createDefaultContext };
    export { evaluate$1 as evaluate };
    export { evaluateString };
}
declare function parse(peggyCode: any): any;
declare function createDefaultContext(param: any): {
    bindings: {
        namespace: void;
        parent: any;
    };
    environment: any;
    frameStack: number;
    inFunction: undefined;
};
declare function evaluate$1(expression: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function evaluateString(peggyCode: any): any;
export {};
