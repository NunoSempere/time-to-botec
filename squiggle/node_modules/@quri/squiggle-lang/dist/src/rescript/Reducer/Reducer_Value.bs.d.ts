export var T: any;
export function toString(aValue: any): any;
export function toStringArray(anArray: any): string;
export function toStringBool(aBool: any): string;
export function toStringCall(fName: any): string;
export function toStringDate(date: any): any;
export function toStringDeclaration(d: any): string;
export var toStringDistribution: typeof GenericDist$QuriSquiggleLang.toString;
export function toStringLambda(lambdaValue: any): string;
export function toStringNumber(aNumber: any): string;
export function toStringRecord(aMap: any): string;
export function toStringString(aString: any): string;
export function toStringSymbol(aString: any): string;
export function toStringTimeDuration(t: any): string;
export var toStringVoid: string;
export function toStringMap(aMap: any): string;
export function toStringWithType(aValue: any): string | undefined;
export function argsToString(args: any): any;
export function toStringFunctionCall(param: any): string;
export function toStringResult(x: any): string;
export function toStringResultOkless(codeResult: any): any;
export function valueToValueType(value: any): 0 | 1 | 5 | 2 | 3 | 4 | 6 | 7 | 8 | 9 | 10 | undefined;
export function functionCallToCallSignature(functionCall: any): {
    [x: symbol]: string;
    _0: any;
    _1: any;
};
export function valueTypeToString(valueType: any): "Array" | "Record" | "Lambda" | "String" | "Void" | "Bool" | "Number" | "Date" | "Declaration" | "Distribution" | "Duration" | undefined;
export function functionCallSignatureToString(functionCallSignature: any): string;
export function arrayToValueArray(arr: any): any;
export function resultToValue(rExpression: any): any;
export var recordToKeyValuePairs: any;
import GenericDist$QuriSquiggleLang = require("../Distributions/GenericDist.bs.js");
