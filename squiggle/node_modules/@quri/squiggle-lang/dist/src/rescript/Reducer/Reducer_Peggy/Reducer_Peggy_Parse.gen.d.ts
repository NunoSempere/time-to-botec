export declare type locationPoint = {
    readonly line: number;
    readonly column: number;
};
export declare type location = {
    readonly source: string;
    readonly start: locationPoint;
    readonly end: locationPoint;
};
export declare type node = {
    readonly type: string;
    readonly location: location;
};
export declare abstract class ParseError_t {
    protected opaque: any;
}
export declare type parseError = ParseError_t;
export declare type parseResult = {
    tag: "Ok";
    value: node;
} | {
    tag: "Error";
    value: parseError;
};
export declare const ParseError_getMessage: (param: ParseError_t) => string;
export declare const ParseError_getLocation: (param: ParseError_t) => location;
export declare const parse: (expr: string, source: string) => parseResult;
export declare const ParseError: {
    getLocation: (param: ParseError_t) => location;
    getMessage: (param: ParseError_t) => string;
};
