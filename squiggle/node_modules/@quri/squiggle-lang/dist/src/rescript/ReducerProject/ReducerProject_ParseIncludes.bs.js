'use strict';
var Js_exn = require("@rescript/std/lib/js/js_exn.js");
var Caml_array = require("@rescript/std/lib/js/caml_array.js");
var Belt_Option = require("@rescript/std/lib/js/belt_Option.js");
var Caml_js_exceptions = require("@rescript/std/lib/js/caml_js_exceptions.js");
var E_A$QuriSquiggleLang = require("../Utility/E/E_A.bs.js");
var SqError$QuriSquiggleLang = require("../SqError.bs.js");
var ReducerProject_IncludeParserJs = require("./ReducerProject_IncludeParser.js");
var Reducer_FrameStack$QuriSquiggleLang = require("../Reducer/Reducer_FrameStack.bs.js");
var Reducer_Peggy_Parse$QuriSquiggleLang = require("../Reducer/Reducer_Peggy/Reducer_Peggy_Parse.bs.js");
function parse__(prim) {
    return ReducerProject_IncludeParserJs.parse(prim);
}
function parseIncludes(expr) {
    try {
        var answer = ReducerProject_IncludeParserJs.parse(expr);
        return {
            TAG: 0,
            _0: E_A$QuriSquiggleLang.fmap(answer, (function (item) {
                return [
                    Caml_array.get(item, 0),
                    Caml_array.get(item, 1)
                ];
            })),
            [Symbol.for("name")]: "Ok"
        };
    }
    catch (raw_obj) {
        var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
        if (obj.RE_EXN_ID === Js_exn.$$Error) {
            var obj$1 = obj._1;
            return {
                TAG: 1,
                _0: SqError$QuriSquiggleLang.fromMessageWithFrameStack({
                    TAG: 12,
                    _0: Belt_Option.getExn(obj$1.message),
                    [Symbol.for("name")]: "RESyntaxError"
                }, Reducer_FrameStack$QuriSquiggleLang.makeSingleFrameStack(Reducer_Peggy_Parse$QuriSquiggleLang.syntaxErrorToLocation(obj$1))),
                [Symbol.for("name")]: "Error"
            };
        }
        throw obj;
    }
}
exports.parse__ = parse__;
exports.parseIncludes = parseIncludes;
//# sourceMappingURL=ReducerProject_ParseIncludes.bs.js.map