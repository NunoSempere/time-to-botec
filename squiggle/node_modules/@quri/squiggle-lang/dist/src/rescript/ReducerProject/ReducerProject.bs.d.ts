export var Bindings: any;
export var ProjectItem: any;
export var T: any;
export var Topology: any;
export var getItem: typeof ReducerProject_T$QuriSquiggleLang.getItem;
export var getSourceIds: typeof ReducerProject_T$QuriSquiggleLang.getSourceIds;
export var getDependents: typeof ReducerProject_Topology$QuriSquiggleLang.getDependents;
export var getDependencies: typeof ReducerProject_Topology$QuriSquiggleLang.getDependencies;
export var getRunOrder: typeof ReducerProject_Topology$QuriSquiggleLang.getTopologicalSort;
export var getRunOrderFor: typeof ReducerProject_Topology$QuriSquiggleLang.getRunOrderFor;
export function createProject(param: any): {
    items: any;
    stdLib: any;
    environment: {
        sampleCount: number;
        xyPointLength: number;
    };
    previousRunOrder: never[];
};
export function setItem(project: any, sourceId: any, item: any): void;
export function touchSource_(project: any, sourceId: any): void;
export function touchDependents(project: any, sourceId: any): void;
export function touchSource(project: any, sourceId: any): void;
export function handleNewTopology(project: any): void;
export function getSource(project: any, sourceId: any): any;
export function setSource(project: any, sourceId: any, value: any): void;
export function removeSource(project: any, sourceId: any): void;
export function clean(project: any, sourceId: any): void;
export function cleanAll(project: any): void;
export function cleanResults(project: any, sourceId: any): void;
export function cleanAllResults(project: any): void;
export function getIncludes(project: any, sourceId: any): any;
export function getPastChain(project: any, sourceId: any): any;
export function getIncludesAsVariables(project: any, sourceId: any): any;
export function getDirectIncludes(project: any, sourceId: any): any;
export function setContinues(project: any, sourceId: any, continues: any): void;
export function getContinues(project: any, sourceId: any): any;
export function removeContinues(project: any, sourceId: any): void;
export function setContinuation(project: any, sourceId: any, continuation: any): void;
export function getResultOption(project: any, sourceId: any): any;
export function getResult(project: any, sourceId: any): any;
export function setResult(project: any, sourceId: any, value: any): void;
export function parseIncludes(project: any, sourceId: any): void;
export function rawParse(project: any, sourceId: any): void;
export function getStdLib(project: any): any;
export function setStdLib(project: any, value: any): void;
export function getEnvironment(project: any): any;
export function setEnvironment(project: any, value: any): void;
export function getBindings(project: any, sourceId: any): any;
export function getBindingsAsRecord(project: any, sourceId: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function getContinuationsBefore(project: any, sourceId: any): any;
export function linkDependencies(project: any, sourceId: any): any;
export function doLinkAndRun(project: any, sourceId: any): void;
export function tryRunWithResult(project: any, sourceId: any, rPrevResult: any): any;
export function runAll(project: any): void;
export function run(project: any, sourceId: any): void;
export function evaluate(sourceCode: any): any[];
import ReducerProject_T$QuriSquiggleLang = require("./ReducerProject_T.bs.js");
import ReducerProject_Topology$QuriSquiggleLang = require("./ReducerProject_Topology.bs.js");
