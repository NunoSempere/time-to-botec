'use strict';
var Curry = require("@rescript/std/lib/js/curry.js");
var E_A$QuriSquiggleLang = require("../Utility/E/E_A.bs.js");
var E_R$QuriSquiggleLang = require("../Utility/E/E_R.bs.js");
var FunctionRegistry_Core$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Core.bs.js");
var FunctionRegistry_Helpers$QuriSquiggleLang = require("../FunctionRegistry/FunctionRegistry_Helpers.bs.js");
var nameSpace = "Number";
function make(name, fn) {
    return FunctionRegistry_Core$QuriSquiggleLang.FnDefinition.make(name, [{
            TAG: 2,
            _0: 0,
            [Symbol.for("name")]: "FRTypeArray"
        }], (function (inputs, param, param$1) {
        return E_R$QuriSquiggleLang.errMap(E_R$QuriSquiggleLang.bind(E_R$QuriSquiggleLang.bind(Curry._1(FunctionRegistry_Helpers$QuriSquiggleLang.Prepare.ToTypedArray.numbers, inputs), (function (r) {
            if (E_A$QuriSquiggleLang.length(r) === 0) {
                return {
                    TAG: 1,
                    _0: "List is empty",
                    [Symbol.for("name")]: "Error"
                };
            }
            else {
                return {
                    TAG: 0,
                    _0: r,
                    [Symbol.for("name")]: "Ok"
                };
            }
        })), fn), FunctionRegistry_Helpers$QuriSquiggleLang.wrapError);
    }), undefined);
}
var ArrayNumberDist = {
    make: make
};
var library = [
    FunctionRegistry_Helpers$QuriSquiggleLang.Make.f2f("floor", (function (prim) {
        return Math.floor(prim);
    }), nameSpace, false, ["floor(3.5)"], undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("ceiling", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "ceil", (function (prim) {
            return Math.ceil(prim);
        }))], ["ceil(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("absolute value", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "abs", (function (prim) {
            return Math.abs(prim);
        }))], ["abs(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("exponent", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "exp", (function (prim) {
            return Math.exp(prim);
        }))], ["exp(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("log", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "log", (function (prim) {
            return Math.log(prim);
        }))], ["log(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("log base 10", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "log10", (function (prim) {
            return Math.log10(prim);
        }))], ["log10(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("log base 2", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "log2", (function (prim) {
            return Math.log2(prim);
        }))], ["log2(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("round", nameSpace, false, [Curry._2(FunctionRegistry_Helpers$QuriSquiggleLang.DefineFn.Numbers.oneToOne, "round", (function (prim) {
            return Math.round(prim);
        }))], ["round(3.5)"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("sum", nameSpace, false, [make("sum", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.sum(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["sum([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("product", nameSpace, false, [make("product", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.product(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["product([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("min", nameSpace, false, [make("min", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.min(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["min([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("max", nameSpace, false, [make("max", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.max(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["max([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("mean", nameSpace, false, [make("mean", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.mean(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["mean([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("geometric mean", nameSpace, false, [make("geomean", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.geomean(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["geomean([3,5,2])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("standard deviation", nameSpace, false, [make("stdev", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.stdev(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["stdev([3,5,2,3,5])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("variance", nameSpace, false, [make("variance", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber(E_A$QuriSquiggleLang.Floats.variance(r)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["variance([3,5,2,3,5])"], 6, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("sort", nameSpace, false, [make("sort", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evArray(E_A$QuriSquiggleLang.fmap(E_A$QuriSquiggleLang.Floats.sort(r), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["sort([3,5,2,3,5])"], 0, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("cumulative sum", nameSpace, false, [make("cumsum", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evArray(E_A$QuriSquiggleLang.fmap(E_A$QuriSquiggleLang.Floats.cumSum(r), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["cumsum([3,5,2,3,5])"], 0, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("cumulative prod", nameSpace, false, [make("cumprod", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evArray(E_A$QuriSquiggleLang.fmap(E_A$QuriSquiggleLang.Floats.cumProd(r), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["cumprod([3,5,2,3,5])"], 0, undefined, undefined, undefined),
    FunctionRegistry_Core$QuriSquiggleLang.$$Function.make("diff", nameSpace, false, [make("diff", (function (r) {
            return {
                TAG: 0,
                _0: FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evArray(E_A$QuriSquiggleLang.fmap(E_A$QuriSquiggleLang.Floats.diff(r), FunctionRegistry_Helpers$QuriSquiggleLang.Wrappers.evNumber)),
                [Symbol.for("name")]: "Ok"
            };
        }))], ["diff([3,5,2,3,5])"], 0, undefined, undefined, undefined)
];
var requiresNamespace = false;
exports.nameSpace = nameSpace;
exports.requiresNamespace = requiresNamespace;
exports.ArrayNumberDist = ArrayNumberDist;
exports.library = library;
//# sourceMappingURL=FR_Number.bs.js.map