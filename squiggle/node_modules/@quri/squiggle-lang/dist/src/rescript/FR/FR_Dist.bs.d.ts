export var twoArgs: typeof E_Tuple2$QuriSquiggleLang.toFnCall;
export namespace DistributionCreation {
    export { nameSpace };
    export const output: number;
    export const requiresNamespace: boolean;
    export { fnMake };
    export { TwoArgDist };
    export { OneArgDist };
    export { library };
}
export var library: {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
}[];
import E_Tuple2$QuriSquiggleLang = require("../Utility/E/E_Tuple2.bs.js");
declare var nameSpace: string;
declare function fnMake(name: any, examples: any, definitions: any): {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
};
declare namespace TwoArgDist {
    export { $$process };
    export { make };
    export { makeRecordP5P95 };
    export { makeRecordMeanStdev };
}
declare namespace OneArgDist {
    export { $$process$1 as $$process };
    export { make$1 as make };
}
declare function $$process(fn: any, env: any, r: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function make(name: any, fn: any): {
    name: any;
    inputs: any;
    run: any;
};
declare function makeRecordP5P95(name: any, fn: any): {
    name: any;
    inputs: any;
    run: any;
};
declare function makeRecordMeanStdev(name: any, fn: any): {
    name: any;
    inputs: any;
    run: any;
};
declare function $$process$1(fn: any, env: any, r: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function make$1(name: any, fn: any): {
    name: any;
    inputs: any;
    run: any;
};
export {};
