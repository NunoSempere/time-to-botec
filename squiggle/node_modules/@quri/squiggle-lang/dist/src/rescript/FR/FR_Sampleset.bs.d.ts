export var nameSpace: string;
export var requiresNamespace: boolean;
export namespace Internal {
    export { doLambdaCall };
    export { toType };
    export { fromFn };
    export { map1 };
    export { map2 };
    export { map3 };
    export { parseSampleSetArray };
    export { mapN };
}
export var libaryBase: {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
}[];
export namespace Comparison {
    export { template };
    export { wrapper };
    export { mkBig };
    export { library };
}
declare var library$1: any;
declare function doLambdaCall(aLambdaValue: any, list: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function toType(r: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function fromFn(aLambdaValue: any, context: any, reducer: any): any;
declare function map1(sampleSetDist: any, aLambdaValue: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function map2(t1: any, t2: any, aLambdaValue: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function map3(t1: any, t2: any, t3: any, aLambdaValue: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function parseSampleSetArray(arr: any): any;
declare function mapN(aValueArray: any, aLambdaValue: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function template(name: any, inputs: any, run: any): {
    name: any;
    inputs: any;
    run: any;
};
declare function wrapper(r: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function mkBig(name: any, withDist: any, withFloat: any): {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
};
declare var library: {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
}[];
export { library$1 as library };
