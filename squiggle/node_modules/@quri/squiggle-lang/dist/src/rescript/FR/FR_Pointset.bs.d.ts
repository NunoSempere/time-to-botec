export var nameSpace: string;
export var requiresNamespace: boolean;
export function inputsToDist(inputs: any, xyShapeToPointSetDist: any): void | {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export namespace Internal {
    export { toType };
    export { doLambdaCall };
    export { mapY };
}
export var library: {
    name: any;
    definitions: any;
    requiresNamespace: any;
    nameSpace: any;
    output: any;
    examples: any;
    description: any;
    isExperimental: any;
}[];
declare function toType(r: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
declare function doLambdaCall(aLambdaValue: any, list: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
declare function mapY(pointSetDist: any, aLambdaValue: any, context: any, reducer: any): {
    [x: symbol]: string;
    TAG: number;
    _0: {
        [x: symbol]: string;
        TAG: number;
        _0: any;
    };
};
export {};
