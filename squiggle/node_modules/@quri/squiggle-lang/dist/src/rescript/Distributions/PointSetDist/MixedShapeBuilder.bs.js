'use strict';
var Caml_option = require("@rescript/std/lib/js/caml_option.js");
var E_A$QuriSquiggleLang = require("../../Utility/E/E_A.bs.js");
var E_O$QuriSquiggleLang = require("../../Utility/E/E_O.bs.js");
var Mixed$QuriSquiggleLang = require("./Mixed.bs.js");
var XYShape$QuriSquiggleLang = require("../../Utility/XYShape.bs.js");
var Discrete$QuriSquiggleLang = require("./Discrete.bs.js");
var Continuous$QuriSquiggleLang = require("./Continuous.bs.js");
function buildSimple(continuous, discrete) {
    var continuous$1 = E_O$QuriSquiggleLang.defaultFn(continuous, (function (param) {
        return Continuous$QuriSquiggleLang.make(undefined, 0.0, undefined, {
            xs: [],
            ys: []
        });
    }));
    var discrete$1 = E_O$QuriSquiggleLang.defaultFn(discrete, (function (param) {
        return Discrete$QuriSquiggleLang.make(0.0, undefined, {
            xs: [],
            ys: []
        });
    }));
    var cLength = E_A$QuriSquiggleLang.length(XYShape$QuriSquiggleLang.T.xs(Continuous$QuriSquiggleLang.getShape(continuous$1)));
    var dLength = E_A$QuriSquiggleLang.length(XYShape$QuriSquiggleLang.T.xs(Discrete$QuriSquiggleLang.getShape(discrete$1)));
    if (cLength === 0 || cLength === 1) {
        if (dLength !== 0) {
            return {
                TAG: 1,
                _0: discrete$1,
                [Symbol.for("name")]: "Discrete"
            };
        }
        else {
            return;
        }
    }
    if (dLength === 0) {
        return {
            TAG: 2,
            _0: continuous$1,
            [Symbol.for("name")]: "Continuous"
        };
    }
    var mixedDist = Mixed$QuriSquiggleLang.make(Caml_option.some(undefined), Caml_option.some(undefined), continuous$1, discrete$1);
    return {
        TAG: 0,
        _0: mixedDist,
        [Symbol.for("name")]: "Mixed"
    };
}
exports.buildSimple = buildSimple;
//# sourceMappingURL=MixedShapeBuilder.bs.js.map