import type { DistributionOperation_genericFunctionCallInfo as DistributionTypes_DistributionOperation_genericFunctionCallInfo } from './DistributionTypes.gen';
import type { env as GenericDist_env } from './GenericDist.gen';
import type { error as DistributionTypes_error } from './DistributionTypes.gen';
import type { genericDist as DistributionTypes_genericDist } from './DistributionTypes.gen';
import type { t as SampleSetDist_t } from '../../../src/rescript/Distributions/SampleSetDist/SampleSetDist.gen';
export declare type outputType = {
    tag: "Dist";
    value: DistributionTypes_genericDist;
} | {
    tag: "Float";
    value: number;
} | {
    tag: "String";
    value: string;
} | {
    tag: "FloatArray";
    value: number[];
} | {
    tag: "Bool";
    value: boolean;
} | {
    tag: "GenDistError";
    value: DistributionTypes_error;
};
export declare const defaultEnv: GenericDist_env;
export declare const run: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_DistributionOperation_genericFunctionCallInfo) => outputType;
export declare const Constructors_mean: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_stdev: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_variance: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_sample: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_cdf: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_inv: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pdf: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_normalize: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_isNormalized: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: boolean;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_LogScore_distEstimateDistAnswer: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_LogScore_distEstimateDistAnswerWithPrior: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist, _4: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_LogScore_distEstimateScalarAnswer: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_LogScore_distEstimateScalarAnswerWithPrior: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number, _4: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: number;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_toPointSet: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_toSampleSet: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_fromSamples: (_1: {
    readonly env: GenericDist_env;
}, _2: SampleSetDist_t) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_truncate: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: (null | undefined | number), _4: (null | undefined | number)) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_inspect: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_toString: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: string;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_toSparkline: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: string;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicAdd: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicMultiply: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicDivide: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicSubtract: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicLogarithm: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_algebraicPower: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_scaleLogarithm: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_scaleMultiply: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_scalePower: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: number) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwiseAdd: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwiseMultiply: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwiseDivide: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwiseSubtract: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwiseLogarithm: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
export declare const Constructors_pointwisePower: (_1: {
    readonly env: GenericDist_env;
}, _2: DistributionTypes_genericDist, _3: DistributionTypes_genericDist) => {
    tag: "Ok";
    value: DistributionTypes_genericDist;
} | {
    tag: "Error";
    value: DistributionTypes_error;
};
