import type { interpolationStrategy as XYShape_interpolationStrategy } from '../../../../src/rescript/Utility/XYShape.gen';
import type { xyShape as XYShape_xyShape } from '../../../../src/rescript/Utility/XYShape.gen';
export declare type xyShape = XYShape_xyShape;
export declare type interpolationStrategy = XYShape_interpolationStrategy;
export declare type continuousShape = {
    readonly xyShape: xyShape;
    readonly interpolation: interpolationStrategy;
    readonly integralSumCache?: number;
    readonly integralCache?: continuousShape;
};
export declare type discreteShape = {
    readonly xyShape: xyShape;
    readonly integralSumCache?: number;
    readonly integralCache?: continuousShape;
};
export declare type mixedShape = {
    readonly continuous: continuousShape;
    readonly discrete: discreteShape;
    readonly integralSumCache?: number;
    readonly integralCache?: continuousShape;
};
export declare abstract class pointSetDist {
    protected opaque: any;
}
export declare type distPlus = {
    readonly pointSetDist: pointSetDist;
    readonly integralCache: continuousShape;
    readonly squiggleString?: string;
};
export declare type sparklineError = "CannotSparklineDiscrete";
