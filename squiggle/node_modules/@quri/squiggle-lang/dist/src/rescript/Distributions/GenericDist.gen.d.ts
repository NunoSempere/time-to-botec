import type { DistributionOperation_pointsetXSelection as DistributionTypes_DistributionOperation_pointsetXSelection } from './DistributionTypes.gen';
import type { error as DistributionTypes_error } from './DistributionTypes.gen';
import type { genericDist as DistributionTypes_genericDist } from './DistributionTypes.gen';
import type { pointSetDist as PointSetTypes_pointSetDist } from '../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';
export declare type t = DistributionTypes_genericDist;
export declare type error = DistributionTypes_error;
export declare type env = {
    readonly sampleCount: number;
    readonly xyPointLength: number;
};
export declare const toPointSet: (_1: t, _2: {
    readonly xyPointLength: number;
    readonly sampleCount: number;
    readonly xSelection?: DistributionTypes_DistributionOperation_pointsetXSelection;
}, _3: void) => {
    tag: "Ok";
    value: PointSetTypes_pointSetDist;
} | {
    tag: "Error";
    value: error;
};
