"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Constructors_pointwisePower = exports.Constructors_pointwiseLogarithm = exports.Constructors_pointwiseSubtract = exports.Constructors_pointwiseDivide = exports.Constructors_pointwiseMultiply = exports.Constructors_pointwiseAdd = exports.Constructors_scalePower = exports.Constructors_scaleMultiply = exports.Constructors_scaleLogarithm = exports.Constructors_algebraicPower = exports.Constructors_algebraicLogarithm = exports.Constructors_algebraicSubtract = exports.Constructors_algebraicDivide = exports.Constructors_algebraicMultiply = exports.Constructors_algebraicAdd = exports.Constructors_toSparkline = exports.Constructors_toString = exports.Constructors_inspect = exports.Constructors_truncate = exports.Constructors_fromSamples = exports.Constructors_toSampleSet = exports.Constructors_toPointSet = exports.Constructors_LogScore_distEstimateScalarAnswerWithPrior = exports.Constructors_LogScore_distEstimateScalarAnswer = exports.Constructors_LogScore_distEstimateDistAnswerWithPrior = exports.Constructors_LogScore_distEstimateDistAnswer = exports.Constructors_isNormalized = exports.Constructors_normalize = exports.Constructors_pdf = exports.Constructors_inv = exports.Constructors_cdf = exports.Constructors_sample = exports.Constructors_variance = exports.Constructors_stdev = exports.Constructors_mean = exports.run = exports.defaultEnv = void 0;
const $$toRE118296182 = { "Normalize": 0, "ToPointSet": 1, "Inspect": 2 };
const $$toRE269282217 = { "Pointwise": 0 };
const $$toRE292222791 = { "ToString": 0 };
const $$toRE1066788171 = { "AsDefault": 0, "AsSymbolic": 1, "AsMonteCarlo": 2, "AsConvolution": 3 };
const Curry = require('@rescript/std/lib/js/curry.js');
const DistributionOperationBS = require('./DistributionOperation.bs');
exports.defaultEnv = DistributionOperationBS.defaultEnv;
const run = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.run, Arg1.env, Arg2.tag === "FromDist"
        ? { TAG: 0, _0: { NAME: "ToScore", VAL: { TAG: 0, _0: Arg2.value[0].VAL[0].tag === "Score_Dist"
                        ? { TAG: 0, _0: Arg2.value[0].VAL[0].value }
                        : { TAG: 1, _0: Arg2.value[0].VAL[0].value }, _1: (Arg2.value[0].VAL[1] == null ? undefined : Arg2.value[0].VAL[1]) } }, _1: Arg2.value[1] }
        : Arg2.tag === "FromFloat"
            ? { TAG: 1, _0: Arg2.value[0].NAME === "ToFloat"
                    ? { NAME: "ToFloat", VAL: Arg2.value[0].VAL }
                    : Arg2.value[0].NAME === "ToDist"
                        ? { NAME: "ToDist", VAL: typeof (Arg2.value[0].VAL) === 'object'
                                ? Arg2.value[0].VAL.tag === "ToSampleSet"
                                    ? { TAG: 0, _0: Arg2.value[0].VAL.value }
                                    : Arg2.value[0].VAL.tag === "Scale"
                                        ? { TAG: 1, _0: Arg2.value[0].VAL.value[0], _1: Arg2.value[0].VAL.value[1] }
                                        : { TAG: 2, _0: (Arg2.value[0].VAL.value[0] == null ? undefined : Arg2.value[0].VAL.value[0]), _1: (Arg2.value[0].VAL.value[1] == null ? undefined : Arg2.value[0].VAL.value[1]) }
                                : $$toRE118296182[Arg2.value[0].VAL] }
                        : Arg2.value[0].NAME === "ToDistCombination"
                            ? { NAME: "ToDistCombination", VAL: [typeof (Arg2.value[0].VAL[0]) === 'object'
                                        ? { TAG: 0, _0: $$toRE1066788171[Arg2.value[0].VAL[0].value] }
                                        : $$toRE269282217[Arg2.value[0].VAL[0]], Arg2.value[0].VAL[1], Arg2.value[0].VAL[2]] }
                            : Arg2.value[0].NAME === "ToString"
                                ? { NAME: "ToString", VAL: typeof (Arg2.value[0].VAL) === 'object'
                                        ? { TAG: 0, _0: Arg2.value[0].VAL.value }
                                        : $$toRE292222791[Arg2.value[0].VAL] }
                                : { NAME: "ToBool", VAL: 0 }, _1: Arg2.value[1] }
            : Arg2.tag === "FromSamples"
                ? { TAG: 2, _0: Arg2.value }
                : { TAG: 3, _0: Arg2.value });
    return result.TAG === 0
        ? { tag: "Dist", value: result._0 }
        : result.TAG === 1
            ? { tag: "Float", value: result._0 }
            : result.TAG === 2
                ? { tag: "String", value: result._0 }
                : result.TAG === 3
                    ? { tag: "FloatArray", value: result._0 }
                    : result.TAG === 4
                        ? { tag: "Bool", value: result._0 }
                        : { tag: "GenDistError", value: result._0 };
};
exports.run = run;
const Constructors_mean = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.mean, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_mean = Constructors_mean;
const Constructors_stdev = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.stdev, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_stdev = Constructors_stdev;
const Constructors_variance = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.variance, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_variance = Constructors_variance;
const Constructors_sample = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.sample, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_sample = Constructors_sample;
const Constructors_cdf = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.cdf, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_cdf = Constructors_cdf;
const Constructors_inv = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.inv, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_inv = Constructors_inv;
const Constructors_pdf = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pdf, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pdf = Constructors_pdf;
const Constructors_normalize = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.normalize, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_normalize = Constructors_normalize;
const Constructors_isNormalized = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.isNormalized, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_isNormalized = Constructors_isNormalized;
const Constructors_LogScore_distEstimateDistAnswer = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.isNormalized.distEstimateDistAnswer, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_LogScore_distEstimateDistAnswer = Constructors_LogScore_distEstimateDistAnswer;
const Constructors_LogScore_distEstimateDistAnswerWithPrior = function (Arg1, Arg2, Arg3, Arg4) {
    const result = Curry._4(DistributionOperationBS.Constructors.isNormalized.distEstimateDistAnswerWithPrior, Arg1.env, Arg2, Arg3, Arg4);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_LogScore_distEstimateDistAnswerWithPrior = Constructors_LogScore_distEstimateDistAnswerWithPrior;
const Constructors_LogScore_distEstimateScalarAnswer = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.isNormalized.distEstimateScalarAnswer, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_LogScore_distEstimateScalarAnswer = Constructors_LogScore_distEstimateScalarAnswer;
const Constructors_LogScore_distEstimateScalarAnswerWithPrior = function (Arg1, Arg2, Arg3, Arg4) {
    const result = Curry._4(DistributionOperationBS.Constructors.isNormalized.distEstimateScalarAnswerWithPrior, Arg1.env, Arg2, Arg3, Arg4);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_LogScore_distEstimateScalarAnswerWithPrior = Constructors_LogScore_distEstimateScalarAnswerWithPrior;
const Constructors_toPointSet = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.toPointSet, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_toPointSet = Constructors_toPointSet;
const Constructors_toSampleSet = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.toSampleSet, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_toSampleSet = Constructors_toSampleSet;
const Constructors_fromSamples = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.fromSamples, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_fromSamples = Constructors_fromSamples;
const Constructors_truncate = function (Arg1, Arg2, Arg3, Arg4) {
    const result = Curry._4(DistributionOperationBS.Constructors.truncate, Arg1.env, Arg2, (Arg3 == null ? undefined : Arg3), (Arg4 == null ? undefined : Arg4));
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_truncate = Constructors_truncate;
const Constructors_inspect = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.inspect, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_inspect = Constructors_inspect;
const Constructors_toString = function (Arg1, Arg2) {
    const result = Curry._2(DistributionOperationBS.Constructors.toString, Arg1.env, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_toString = Constructors_toString;
const Constructors_toSparkline = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.toSparkline, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_toSparkline = Constructors_toSparkline;
const Constructors_algebraicAdd = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicAdd, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicAdd = Constructors_algebraicAdd;
const Constructors_algebraicMultiply = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicMultiply, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicMultiply = Constructors_algebraicMultiply;
const Constructors_algebraicDivide = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicDivide, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicDivide = Constructors_algebraicDivide;
const Constructors_algebraicSubtract = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicSubtract, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicSubtract = Constructors_algebraicSubtract;
const Constructors_algebraicLogarithm = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicLogarithm, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicLogarithm = Constructors_algebraicLogarithm;
const Constructors_algebraicPower = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.algebraicPower, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_algebraicPower = Constructors_algebraicPower;
const Constructors_scaleLogarithm = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.scaleLogarithm, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_scaleLogarithm = Constructors_scaleLogarithm;
const Constructors_scaleMultiply = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.scaleMultiply, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_scaleMultiply = Constructors_scaleMultiply;
const Constructors_scalePower = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.scalePower, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_scalePower = Constructors_scalePower;
const Constructors_pointwiseAdd = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwiseAdd, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwiseAdd = Constructors_pointwiseAdd;
const Constructors_pointwiseMultiply = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwiseMultiply, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwiseMultiply = Constructors_pointwiseMultiply;
const Constructors_pointwiseDivide = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwiseDivide, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwiseDivide = Constructors_pointwiseDivide;
const Constructors_pointwiseSubtract = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwiseSubtract, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwiseSubtract = Constructors_pointwiseSubtract;
const Constructors_pointwiseLogarithm = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwiseLogarithm, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwiseLogarithm = Constructors_pointwiseLogarithm;
const Constructors_pointwisePower = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(DistributionOperationBS.Constructors.pointwisePower, Arg1.env, Arg2, Arg3);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.Constructors_pointwisePower = Constructors_pointwisePower;
//# sourceMappingURL=DistributionOperation.gen.js.map