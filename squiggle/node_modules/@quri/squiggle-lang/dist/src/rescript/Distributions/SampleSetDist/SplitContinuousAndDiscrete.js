"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.splitContinuousAndDiscrete = void 0;
const splitContinuousAndDiscrete = (sortedArray, minDiscreteWeight) => {
    const continuous = [];
    const discreteCount = [];
    const discreteValue = [];
    if (!Number.isInteger(minDiscreteWeight)) {
        throw new Error("Minimum discrete weight must be an integer");
    }
    if (minDiscreteWeight <= 1) {
        throw new Error("Minimum discrete weight must be at least 2");
    }
    const minDistance = minDiscreteWeight - 1;
    const len = sortedArray.length;
    let i = 0;
    while (i < len - minDistance) {
        const value = sortedArray[i];
        if (value !== sortedArray[i + minDistance]) {
            continuous.push(value);
            i++;
        }
        else {
            const iOrig = i;
            let base = minDistance;
            const isEqualAt = (ind) => ind < len && sortedArray[ind] === value;
            while (isEqualAt(iOrig + base * 2)) {
                base *= 2;
            }
            let lo = iOrig + base;
            i = Math.min(lo + base, len);
            while (i - lo > 1) {
                const mid = lo + Math.floor((i - lo) / 2);
                if (sortedArray[mid] === value) {
                    lo = mid;
                }
                else {
                    i = mid;
                }
            }
            discreteValue.push(value);
            discreteCount.push(i - iOrig);
        }
    }
    continuous.push(...sortedArray.slice(i));
    return {
        continuousPart: continuous,
        discretePart: { xs: discreteValue, ys: discreteCount },
    };
};
exports.splitContinuousAndDiscrete = splitContinuousAndDiscrete;
//# sourceMappingURL=SplitContinuousAndDiscrete.js.map