export namespace ShapeMonad {
    export { fmap };
}
export namespace MixedPoint {
    export { toContinuousValue };
    export { toDiscreteValue };
    export { makeContinuous };
    export { makeDiscrete };
    export { fmap$1 as fmap };
    export { combine2 };
    export { add };
}
export function sparklineErrorToString(err: any): string;
declare function fmap(t: any, param: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
} | undefined;
declare function toContinuousValue(t: any): any;
declare function toDiscreteValue(t: any): any;
declare function makeContinuous(continuous: any): {
    continuous: any;
    discrete: number;
};
declare function makeDiscrete(discrete: any): {
    continuous: number;
    discrete: any;
};
declare function fmap$1(fn: any, t: any): {
    continuous: any;
    discrete: any;
};
declare function combine2(fn: any, c: any, d: any): {
    continuous: any;
    discrete: any;
};
declare function add(param: any, param$1: any): {
    continuous: any;
    discrete: any;
};
export {};
