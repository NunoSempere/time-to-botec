export namespace JS {
    export { toPointSetDist };
}
export namespace $$Error {
    export { pointsetConversionErrorToString };
    export { fromOperationError };
    export { toString };
}
export function pointsetConversionErrorToString(err: any): string;
export function fromOperationError(e: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function toString(err: any): any;
export namespace T {
    export { make };
    export { get };
}
export function make(a: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function get(a: any): any;
export var length: typeof E_A$QuriSquiggleLang.length;
declare function toPointSetDist$1(samples: any, samplingInputs: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function sample(t: any): any;
export function sampleN(t: any, n: any): any;
export function _fromSampleResultArray(samples: any): any;
export function samplesMap(fn: any, t: any): any;
export function map2(fn: any, t1: any, t2: any): any;
export function map3(fn: any, t1: any, t2: any, t3: any): any;
export function mapN(fn: any, t1: any): any;
export function mean(t: any): any;
export function geomean(t: any): any;
export function mode(t: any): any;
export function sum(t: any): any;
export function min(t: any): any;
export function max(t: any): any;
export function stdev(t: any): any;
export function variance(t: any): any;
export function percentile(t: any, f: any): any;
export function cdf(t: any, f: any): number;
export function mixture(values: any, intendedLength: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function truncateLeft(t: any, f: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function truncateRight(t: any, f: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function truncate(t: any, leftCutoff: any, rightCutoff: any): any;
export function minOfTwo(t1: any, t2: any): any;
export function maxOfTwo(t1: any, t2: any): any;
export function minOfFloat(t: any, f: any): any;
export function maxOfFloat(t: any, f: any): any;
declare function toPointSetDist(prim0: any, prim1: any, prim2: any): import("./SampleSetDist.gen.js").JS_distJs;
import E_A$QuriSquiggleLang = require("../../Utility/E/E_A.bs.js");
export { toPointSetDist$1 as toPointSetDist };
