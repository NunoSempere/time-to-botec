import type { continuousShape as PointSetTypes_continuousShape } from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';
import type { discreteShape as PointSetTypes_discreteShape } from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';
import type { genericDist as DistributionTypes_genericDist } from '../../../../src/rescript/Distributions/DistributionTypes.gen';
import type { mixedShape as PointSetTypes_mixedShape } from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';
import type { pointSetDist as PointSetTypes_pointSetDist } from '../../../../src/rescript/Distributions/PointSetDist/PointSetTypes.gen';
import type { pointSetDistributionTag as $$pointSetDistributionTag } from './ForTS_Distribution_PointSetDistribution_tag';
export declare type pointSetDistribution = PointSetTypes_pointSetDist;
export declare type continuousShape = PointSetTypes_continuousShape;
export declare type discreteShape = PointSetTypes_discreteShape;
export declare type mixedShape = PointSetTypes_mixedShape;
export declare type pointSetDistributionTag = $$pointSetDistributionTag;
export declare const getTag: (variant: pointSetDistribution) => pointSetDistributionTag;
export declare const getMixed: (variant: pointSetDistribution) => (null | undefined | PointSetTypes_mixedShape);
export declare const getDiscrete: (variant: pointSetDistribution) => (null | undefined | PointSetTypes_discreteShape);
export declare const getContinues: (variant: pointSetDistribution) => (null | undefined | PointSetTypes_continuousShape);
export declare const toDistribution: (v: pointSetDistribution) => DistributionTypes_genericDist;
