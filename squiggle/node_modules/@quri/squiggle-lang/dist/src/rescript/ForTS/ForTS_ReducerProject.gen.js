"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnvironment = exports.setEnvironment = exports.evaluate = exports.getResult = exports.getBindings = exports.runAll = exports.run = exports.rawParse = exports.parseIncludes = exports.getRunOrderFor = exports.getRunOrder = exports.getDependents = exports.getDependencies = exports.setContinues = exports.getContinues = exports.getPastChain = exports.getIncludes = exports.cleanAllResults = exports.cleanResults = exports.cleanAll = exports.clean = exports.touchSource = exports.getSource = exports.removeSource = exports.setSource = exports.getSourceIds = exports.createProject = void 0;
const Curry = require('@rescript/std/lib/js/curry.js');
const ForTS_ReducerProjectBS = require('./ForTS_ReducerProject.bs');
exports.createProject = ForTS_ReducerProjectBS.createProject;
exports.getSourceIds = ForTS_ReducerProjectBS.getSourceIds;
const setSource = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(ForTS_ReducerProjectBS.setSource, Arg1, Arg2, Arg3);
    return result;
};
exports.setSource = setSource;
const removeSource = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.removeSource, Arg1, Arg2);
    return result;
};
exports.removeSource = removeSource;
const getSource = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getSource, Arg1, Arg2);
    return result;
};
exports.getSource = getSource;
const touchSource = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.touchSource, Arg1, Arg2);
    return result;
};
exports.touchSource = touchSource;
const clean = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.clean, Arg1, Arg2);
    return result;
};
exports.clean = clean;
exports.cleanAll = ForTS_ReducerProjectBS.cleanAll;
const cleanResults = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.cleanResults, Arg1, Arg2);
    return result;
};
exports.cleanResults = cleanResults;
exports.cleanAllResults = ForTS_ReducerProjectBS.cleanAllResults;
const getIncludes = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getIncludes, Arg1, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.getIncludes = getIncludes;
const getPastChain = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getPastChain, Arg1, Arg2);
    return result;
};
exports.getPastChain = getPastChain;
const getContinues = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getContinues, Arg1, Arg2);
    return result;
};
exports.getContinues = getContinues;
const setContinues = function (Arg1, Arg2, Arg3) {
    const result = Curry._3(ForTS_ReducerProjectBS.setContinues, Arg1, Arg2, Arg3);
    return result;
};
exports.setContinues = setContinues;
const getDependencies = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getDependencies, Arg1, Arg2);
    return result;
};
exports.getDependencies = getDependencies;
const getDependents = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getDependents, Arg1, Arg2);
    return result;
};
exports.getDependents = getDependents;
exports.getRunOrder = ForTS_ReducerProjectBS.getRunOrder;
const getRunOrderFor = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getRunOrderFor, Arg1, Arg2);
    return result;
};
exports.getRunOrderFor = getRunOrderFor;
const parseIncludes = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.parseIncludes, Arg1, Arg2);
    return result;
};
exports.parseIncludes = parseIncludes;
const rawParse = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.rawParse, Arg1, Arg2);
    return result;
};
exports.rawParse = rawParse;
const run = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.run, Arg1, Arg2);
    return result;
};
exports.run = run;
exports.runAll = ForTS_ReducerProjectBS.runAll;
const getBindings = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getBindings, Arg1, Arg2);
    return result;
};
exports.getBindings = getBindings;
const getResult = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.getResult, Arg1, Arg2);
    return result.TAG === 0
        ? { tag: "Ok", value: result._0 }
        : { tag: "Error", value: result._0 };
};
exports.getResult = getResult;
const evaluate = function (Arg1) {
    const result = ForTS_ReducerProjectBS.evaluate(Arg1);
    return [result[0].TAG === 0
            ? { tag: "Ok", value: result[0]._0 }
            : { tag: "Error", value: result[0]._0 }, result[1]];
};
exports.evaluate = evaluate;
const setEnvironment = function (Arg1, Arg2) {
    const result = Curry._2(ForTS_ReducerProjectBS.setEnvironment, Arg1, Arg2);
    return result;
};
exports.setEnvironment = setEnvironment;
exports.getEnvironment = ForTS_ReducerProjectBS.getEnvironment;
//# sourceMappingURL=ForTS_ReducerProject.gen.js.map