export var T: any;
export var Private: any;
export function createProject(param: any): {
    items: any;
    stdLib: any;
    environment: {
        sampleCount: number;
        xyPointLength: number;
    };
    previousRunOrder: never[];
};
export var getSourceIds: typeof import("../ReducerProject/ReducerProject_T.bs.js").getSourceIds;
export var setSource: typeof ReducerProject$QuriSquiggleLang.setSource;
export var removeSource: typeof ReducerProject$QuriSquiggleLang.removeSource;
export var getSource: typeof ReducerProject$QuriSquiggleLang.getSource;
export var touchSource: typeof ReducerProject$QuriSquiggleLang.touchSource;
export var clean: typeof ReducerProject$QuriSquiggleLang.clean;
export var cleanAll: typeof ReducerProject$QuriSquiggleLang.cleanAll;
export var cleanResults: typeof ReducerProject$QuriSquiggleLang.cleanResults;
export var cleanAllResults: typeof ReducerProject$QuriSquiggleLang.cleanAllResults;
export var getIncludes: typeof ReducerProject$QuriSquiggleLang.getIncludes;
export var getPastChain: typeof ReducerProject$QuriSquiggleLang.getPastChain;
export var getContinues: typeof ReducerProject$QuriSquiggleLang.getContinues;
export var setContinues: typeof ReducerProject$QuriSquiggleLang.setContinues;
export var getDependencies: typeof import("../ReducerProject/ReducerProject_Topology.bs.js").getDependencies;
export var getDependents: typeof import("../ReducerProject/ReducerProject_Topology.bs.js").getDependents;
export var getRunOrder: typeof import("../ReducerProject/ReducerProject_Topology.bs.js").getTopologicalSort;
export var getRunOrderFor: typeof import("../ReducerProject/ReducerProject_Topology.bs.js").getRunOrderFor;
export var parseIncludes: typeof ReducerProject$QuriSquiggleLang.parseIncludes;
export var rawParse: typeof ReducerProject$QuriSquiggleLang.rawParse;
export var run: typeof ReducerProject$QuriSquiggleLang.run;
export var runAll: typeof ReducerProject$QuriSquiggleLang.runAll;
export function getBindings(project: any, sourceId: any): any;
export var getResult: typeof ReducerProject$QuriSquiggleLang.getResult;
export var evaluate: typeof ReducerProject$QuriSquiggleLang.evaluate;
export var setEnvironment: typeof ReducerProject$QuriSquiggleLang.setEnvironment;
export var getEnvironment: typeof ReducerProject$QuriSquiggleLang.getEnvironment;
import ReducerProject$QuriSquiggleLang = require("../ReducerProject/ReducerProject.bs.js");
