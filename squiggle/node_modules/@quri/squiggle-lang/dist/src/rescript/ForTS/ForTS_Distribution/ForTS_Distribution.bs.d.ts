export var defaultEnvironment: {
    sampleCount: number;
    xyPointLength: number;
};
export var dtPointSet_: ForTS_Distribution_tag.distributionTag;
export var dtSampleSet_: ForTS_Distribution_tag.distributionTag;
export var dtSymbolic_: ForTS_Distribution_tag.distributionTag;
export function getTag(variant: any): ForTS_Distribution_tag.distributionTag | undefined;
export function getPointSet(variant: any): any;
export function getSampleSet(variant: any): any;
export function getSymbolic(variant: any): any;
export var mean: (env: any, dist: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var stdev: (env: any, dist: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var variance: (env: any, dist: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var sample: (env: any, dist: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var cdf: (env: any, dist: any, f: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var inv: (env: any, dist: any, f: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var pdf: (env: any, dist: any, f: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export var normalize: (env: any, dist: any) => {
    [x: symbol]: string;
    TAG: number;
    _0: any;
};
export function toPointSet(variant: any, env: any): {
    [x: symbol]: string;
    TAG: number;
    _0: any;
} | undefined;
export var toString: typeof GenericDist$QuriSquiggleLang.toString;
import ForTS_Distribution_tag = require("./ForTS_Distribution_tag");
import GenericDist$QuriSquiggleLang = require("../../Distributions/GenericDist.bs.js");
